version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
      POSTGRES_DB: authdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet 

  server:
    build:
      context: ./server
    container_name: auth_server
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=authuser
      - DATABASE_PASSWORD=authpass
      - DATABASE_NAME=authdb
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - appnet

  web:
    build:
      context: ./web
      args:
        NEXT_PUBLIC_API_URL: "http://localhost:3000"
    container_name: auth_web
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - server
    ports:
      - "3001:3000"
    networks:
      - appnet

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: auth_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - appnet


volumes:
  postgres_data:

networks:
  appnet:
    driver: bridge

